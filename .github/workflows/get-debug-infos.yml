name: Get debug infos

on:
  issue_comment:
    types: [created]

jobs:
  debug-info:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    # correct author, correct command prefix
    if: |
      github.event.comment.user.login == 'FL550' &&
      startsWith(github.event.comment.body, '/debug ')

    steps:
      #  extract the argument (everything after "/debug ")
      - id: parse
        run: |
          STATION=$(echo "${{ github.event.comment.body }}" | awk '{print $2}')
          MODE=$(echo "${{ github.event.comment.body }}" | awk '{print $3}')
          echo "station=$STATION" >> "$GITHUB_OUTPUT"
          echo "mode=$MODE" >> "$GITHUB_OUTPUT"
      - name: checkout repo
        uses: actions/checkout@v4
      - name: install python deps
        run: pip install simple_dwd_weatherforecast
      - name: install tkinter dependency
        run: sudo apt-get update && sudo apt-get install -y python3-tk
      # use the extracted value
      - name: fetch weather
        id: run
        env:
          STATION: ${{ steps.parse.outputs.station }}
        run: |
            python .github/scripts/get_station_data.py > result.txt
            echo "stdout=result.txt" >> "$GITHUB_OUTPUT"

      # 4) post the captured stdout as a comment
      - name: post result
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            set -euo pipefail
            # --- build the folded markdown ---
            RAW="$(cat ${{ steps.run.outputs.stdout }})"

            # Extract station info (first two lines)
            STATION_LINE=$(echo "$RAW" | grep '^## Station:')
            INFO_LINE=$(echo "$RAW" | grep "{" | head -n1)

            # Extract forecast header and table (everything after the station info)
            FORECAST_HEADER=$(echo "$RAW" | grep '^## Forecast')
            FORECAST_TABLE=$(echo "$RAW" | awk '/^\|/{print}' | sed ':a;N;$!ba;s/\n/\\n/g')

            BODY=$(cat <<EOF
            <details>
            <summary>$STATION_LINE</summary>

            \`\`\`python
            $INFO_LINE
            \`\`\`
            </details>

            <details>
            <summary>$FORECAST_HEADER</summary>

            $(echo -e "$FORECAST_TABLE")

            </details>
            EOF
            )

            # --- post it ---
            gh api repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            --method POST \
            --field body="$BODY"
